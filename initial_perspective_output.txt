cx: 632.134194420385,cy 449.8592323618941,fx 1361.2681884765625
[[10.9      10.7      43.4     ]
 [ 5.5       3.9      45.98739 ]
 [14.2       3.9      46.388252]
 [22.8       3.9      45.375217]
 [ 5.5      10.6      43.868782]
 [14.2      10.6      43.675392]
 [22.8      10.6      43.190506]
 [ 5.5      17.3      42.14594 ]
 [14.2      17.3      41.85451 ]
 [22.8      17.3      42.263344]]
Camera Matrix
[[1.41895932e+03 0.00000000e+00 6.30416293e+02]
 [0.00000000e+00 1.41795444e+03 4.54316144e+02]
 [0.00000000e+00 0.00000000e+00 1.00000000e+00]]
Distortion Coeff
[[ 0.04211032 -0.3117249  -0.00195317  0.00276519 -0.28945757]]
Region of Interest
[  21   13 1237  925]
New Camera Matrix
[[1.36126819e+03 0.00000000e+00 6.32134194e+02]
 [0.00000000e+00 1.36624243e+03 4.49859232e+02]
 [0.00000000e+00 0.00000000e+00 1.00000000e+00]]
Inverse New Camera Matrix
[[ 7.04741838e-04  0.00000000e+00 -4.44280737e-01]
 [ 0.00000000e+00  7.05241278e-04 -3.20402498e-01]
 [ 0.00000000e+00  0.00000000e+00  1.00000000e+00]]
>==> Calibration Loaded
solvePNP
pnp rvec1 - Rotation
[[0.16779619]
 [1.26481139]
 [2.89475814]]
pnp tvec1 - Translation
[[  7.91470529]
 [-22.14218404]
 [-83.18989796]]
R - rodrigues vecs
[[-0.99413455  0.06242449  0.08831583]
 [ 0.02239372 -0.6800901   0.73278644]
 [ 0.10580654  0.73046604  0.67470315]]
R|t - Extrinsic Matrix
[[-9.94134547e-01  6.24244896e-02  8.83158319e-02  7.91470529e+00]
 [ 2.23937159e-02 -6.80090105e-01  7.32786443e-01 -2.21421840e+01]
 [ 1.05806543e-01  7.30466038e-01  6.74703152e-01 -8.31898980e+01]]
camMtx*R|t - Projection Matrix
[[-1.34393431e+03  5.49075503e+02  5.50660433e+02 -4.12136222e+04]
 [ 7.98228894e+01 -6.32474269e+02  1.34558632e+03 -6.91911217e+04]
 [ 1.05806543e-01  7.30466038e-01  6.74703152e-01 -8.31898980e+01]]
=======POINT # 0 =========================
Forward: From World Points, Find Image Pixel
{{-- XYZ1
[[10.9]
 [10.7]
 [43.4]
 [ 1. ]]
//-- suv1
[[-26088.73435129]
 [-16690.0783794 ]
 [   -44.93850241]]
>==> uv1 - Image Points
[[580.54303003]
 [371.39818833]
 [  1.        ]]
>==> s - Scaling Factor
-44.93850240502398
Solve: From Image Pixels, find World Points
>==> uv1
[[632.1342 ]
 [449.85922]
 [  1.     ]]
//-- suv1
[[-28407.166   ]
 [-20216.      ]
 [   -44.938503]]
get camera coordinates, multiply by inverse Camera Matrix, subtract tvec1
      xyz_c
{{-- XYZ
[[12.46862662]
 [12.28913328]
 [41.43353688]]
camXYZ
[[11.30197134]
 [10.75462084]
 [44.89600942]]
=======POINT # 1 =========================
Forward: From World Points, Find Image Pixel
{{-- XYZ1
[[ 5.5    ]
 [ 3.9    ]
 [45.98739]
 [ 1.     ]]
//-- suv1
[[-21140.43114702]
 [ -9338.74443416]
 [   -48.73130833]]
>==> uv1 - Image Points
[[433.81620304]
 [191.63746583]
 [  1.        ]]
>==> s - Scaling Factor
-48.73130832521556
Solve: From Image Pixels, find World Points
>==> uv1
[[502.]
 [185.]
 [  1.]]
//-- suv1
[[-24463.117   ]
 [ -9015.292   ]
 [   -48.731308]]
get camera coordinates, multiply by inverse Camera Matrix, subtract tvec1
      xyz_c
{{-- XYZ
[[ 7.83300957]
 [ 3.59868826]
 [45.94774262]]
camXYZ
[[ 6.06639447]
 [ 1.40915012]
 [44.46893818]]
=======POINT # 2 =========================
Forward: From World Points, Find Image Pixel
{{-- XYZ1
[[14.2     ]
 [ 3.9     ]
 [46.388252]
 [ 1.      ]]
//-- suv1
[[-32611.91966436]
 [ -8104.88866997]
 [   -47.54032745]]
>==> uv1 - Image Points
[[685.98432973]
 [170.48449398]
 [  1.        ]]
>==> s - Scaling Factor
-47.540327454790244
Solve: From Image Pixels, find World Points
>==> uv1
[[700.]
 [197.]
 [  1.]]
//-- suv1
[[-33278.23   ]
 [ -9365.444  ]
 [   -47.54033]]
get camera coordinates, multiply by inverse Camera Matrix, subtract tvec1
      xyz_c
{{-- XYZ
[[14.64691388]
 [ 4.47528289]
 [45.69533642]]
camXYZ
[[13.2934262 ]
 [ 1.46985339]
 [44.44449073]]
=======POINT # 3 =========================
Forward: From World Points, Find Image Pixel
{{-- XYZ1
[[22.8     ]
 [ 3.9     ]
 [45.375217]
 [ 1.      ]]
//-- suv1
[[-44727.59217981]
 [ -8781.53766518]
 [   -47.31388903]]
>==> uv1 - Image Points
[[945.33747057]
 [185.6016879 ]
 [  1.        ]]
>==> s - Scaling Factor
-47.31388903153108
Solve: From Image Pixels, find World Points
>==> uv1
[[894.]
 [208.]
 [  1.]]
//-- suv1
[[-42298.617  ]
 [ -9841.289  ]
 [   -47.31389]]
get camera coordinates, multiply by inverse Camera Matrix, subtract tvec1
      xyz_c
{{-- XYZ
[[21.08150306]
 [ 4.51514483]
 [44.97872645]]
camXYZ
[[20.3730228 ]
 [ 1.50189655]
 [44.41923075]]
=======POINT # 4 =========================
Forward: From World Points, Find Image Pixel
{{-- XYZ1
[[ 5.5     ]
 [10.6     ]
 [43.868782]
 [ 1.      ]]
//-- suv1
[[-18628.25792722]
 [-16427.0902343 ]
 [   -45.26661619]]
>==> uv1 - Image Points
[[411.52309351]
 [362.89635977]
 [  1.        ]]
>==> s - Scaling Factor
-45.26661619014275
Solve: From Image Pixels, find World Points
>==> uv1
[[491.]
 [331.]
 [  1.]]
//-- suv1
[[-22225.908   ]
 [-14983.25    ]
 [   -45.266617]]
get camera coordinates, multiply by inverse Camera Matrix, subtract tvec1
      xyz_c
{{-- XYZ
[[ 8.0433455 ]
 [ 9.74922219]
 [44.39102853]]
camXYZ
[[ 5.94208148]
 [ 6.71692506]
 [44.72321762]]
=======POINT # 5 =========================
Forward: From World Points, Find Image Pixel
{{-- XYZ1
[[14.2     ]
 [10.6     ]
 [43.675392]
 [ 1.      ]]
//-- suv1
[[-30426.97835601]
 [-15992.8539057 ]
 [   -44.47658006]]
>==> uv1 - Image Points
[[684.1123647 ]
 [359.57921867]
 [  1.        ]]
>==> s - Scaling Factor
-44.47658005606834
Solve: From Image Pixels, find World Points
>==> uv1
[[695.]
 [342.]
 [  1.]]
//-- suv1
[[-30911.225  ]
 [-15210.991  ]
 [   -44.47658]]
get camera coordinates, multiply by inverse Camera Matrix, subtract tvec1
      xyz_c
{{-- XYZ
[[14.55161383]
 [10.20369253]
 [44.04931192]]
camXYZ
[[13.38553603]
 [ 6.73008704]
 [44.69567779]]
=======POINT # 6 =========================
Forward: From World Points, Find Image Pixel
{{-- XYZ1
[[22.8     ]
 [10.6     ]
 [43.190506]
 [ 1.      ]]
//-- suv1
[[-42251.82030674]
 [-15958.83329969]
 [   -43.89379807]]
>==> uv1 - Image Points
[[962.59203262]
 [363.57831858]
 [  1.        ]]
>==> s - Scaling Factor
-43.89379807335021
Solve: From Image Pixels, find World Points
>==> uv1
[[896.]
 [353.]
 [  1.]]
//-- suv1
[[-39328.844 ]
 [-15494.511 ]
 [   -43.8938]]
get camera coordinates, multiply by inverse Camera Matrix, subtract tvec1
      xyz_c
{{-- XYZ
[[20.7594705 ]
 [10.50588871]
 [43.61238917]]
camXYZ
[[20.71983204]
 [ 6.74891344]
 [44.66882192]]
=======POINT # 7 =========================
Forward: From World Points, Find Image Pixel
{{-- XYZ1
[[ 5.5    ]
 [17.3    ]
 [42.14594]
 [ 1.     ]]
//-- suv1
[[-15898.15424936]
 [-22982.90131542]
 [   -41.53490229]]
>==> uv1 - Image Points
[[382.7661406 ]
 [553.33948195]
 [  1.        ]]
>==> s - Scaling Factor
-41.5349022885952
Solve: From Image Pixels, find World Points
>==> uv1
[[478.]
 [487.]
 [  1.]]
//-- suv1
[[-19853.682 ]
 [-20227.496 ]
 [   -41.5349]]
get camera coordinates, multiply by inverse Camera Matrix, subtract tvec1
      xyz_c
{{-- XYZ
[[ 8.31479187]
 [15.80441619]
 [43.32371735]]
camXYZ
[[ 5.76389718]
 [12.39059803]
 [44.99519758]]
=======POINT # 8 =========================
Forward: From World Points, Find Image Pixel
{{-- XYZ1
[[14.2    ]
 [17.3    ]
 [41.85451]
 [ 1.     ]]
//-- suv1
[[-27750.8601713 ]
 [-22680.58320157]
 [   -40.81101251]]
>==> uv1 - Image Points
[[679.98460373]
 [555.746643  ]
 [  1.        ]]
>==> s - Scaling Factor
-40.8110125130021
Solve: From Image Pixels, find World Points
>==> uv1
[[691.]
 [497.]
 [  1.]]
//-- suv1
[[-28200.41    ]
 [-20283.072   ]
 [   -40.811012]]
get camera coordinates, multiply by inverse Camera Matrix, subtract tvec1
      xyz_c
{{-- XYZ
[[14.55282218]
 [16.13030989]
 [43.0655441 ]]
camXYZ
[[13.53293025]
 [12.35055518]
 [44.96388145]]
=======POINT # 9 =========================
Forward: From World Points, Find Image Pixel
{{-- XYZ1
[[22.8     ]
 [17.3     ]
 [42.263344]
 [ 1.      ]]
//-- suv1
[[-39083.56658532]
 [-21443.98691045]
 [   -39.62523569]]
>==> uv1 - Image Points
[[986.33019845]
 [541.16995231]
 [  1.        ]]
>==> s - Scaling Factor
-39.62523569354948
Solve: From Image Pixels, find World Points
>==> uv1
[[900.]
 [508.]
 [  1.]]
//-- suv1
[[-35662.71    ]
 [-20129.621   ]
 [   -39.625237]]
get camera coordinates, multiply by inverse Camera Matrix, subtract tvec1
      xyz_c
{{-- XYZ
[[20.424077  ]
 [16.82008656]
 [43.15550982]]
camXYZ
[[21.15831377]
 [12.35427658]
 [44.93520168]]
>>>>>>>>>>>>>>>>>>>>> S RESULTS
Mean: -44.413216
Std: 2.8688326
>>>>>> S Error by Point
Point 0
S: -44.938503 Mean: -44.413216 Error: -0.5252876
Point 1
S: -48.731308 Mean: -44.413216 Error: -4.3180923
Point 2
S: -47.54033 Mean: -44.413216 Error: -3.1271133
Point 3
S: -47.31389 Mean: -44.413216 Error: -2.900673
Point 4
S: -45.266617 Mean: -44.413216 Error: -0.8534012
Point 5
S: -44.47658 Mean: -44.413216 Error: -0.06336594
Point 6
S: -43.8938 Mean: -44.413216 Error: 0.5194168
Point 7
S: -41.5349 Mean: -44.413216 Error: 2.878315
Point 8
S: -40.811012 Mean: -44.413216 Error: 3.6022034
Point 9
S: -39.625237 Mean: -44.413216 Error: 4.787979
